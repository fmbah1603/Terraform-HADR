snapshotId=$(az snapshot list --query "[?properties.managedBy.contains('$resourceGroupName') && properties.managedBy.contains('$vmName')].id | [0]" -o tsv)

snapshotName=$(az snapshot list --query "[?properties.managedBy.contains('$resourceGroupName') && properties.managedBy.contains('$vmName')].name | [0]" -o tsv)

nicName="${virtualMachineName,,}_nic"

# Create NIC in the first subnet of the virtual network
az network nic create \
    --name $nicName \
    --resource-group $resourceGroupName \
    --location $snapshotLocation \
    --subnet $(az network vnet subnet show --name default --vnet-name $virtualNetworkName --resource-group $resourceGroupName --query id --output tsv) \
    --public-ip-address $publicIpId



az : ERROR: (InvalidResourceReference) Resource 
/subscriptions/91da15f8-3ba9-4916-afe1-da3b8651e6d5/resourceGroups/az-ha-dev-usva-rg/providers/Microsoft.Network/virtualNetworks/az-opa-dev-usva-vnet/subnets/AppSubnet referenced by 
resource /subscriptions/91da15f8-3ba9-4916-afe1-da3b8651e6d5/resourceGroups/az-ha-dev-usva-rg/providers/Microsoft.Network/networkInterfaces/hadr-nic was not found. Please make sure that the 
referenced resource exists, and that both resources are in the same region.
At line:1 char:8
+ $nic = az network nic create --resource-group $resourceGroupName --na ...
+        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (ERROR: (Invalid...he same region.:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
Code: InvalidResourceReference
Message: Resource /subscriptions/91da15f8-3ba9-4916-afe1-da3b8651e6d5/resourceGroups/az-ha-dev-usva-rg/providers/Microsoft.Network/virtualNetworks/az-opa-dev-usva-vnet/subnets/AppSubnet 
referenced by resource /subscriptions/91da15f8-3ba9-4916-afe1-da3b8651e6d5/resourceGroups/az-ha-dev-usva-rg/providers/Microsoft.Network/networkInterfaces/hadr-nic was not found. Please make 
sure that the referenced resource exists, and that both resources are in the same region.

az network public-ip create --resource-group myResourceGroup --name myPublicIP --sku Standard --version IPv4 --zone 1 2 3
az network nic create --resource-group myResourceGroup --name myNIC --private-ip-address-version IPv4 --vnet-name myVNet --subnet myBackEndSubnet --public-ip-address myPublicIP





VNetresourceGroupName="your_resource_group_name"
virtualNetworkName="your_virtual_network_name"

# Retrieve the virtual network
vnet=$(az network vnet show --resource-group $resourceGroupName --name $virtualNetworkName)
vnetName=$(echo $vnet | jq -r '.name')
